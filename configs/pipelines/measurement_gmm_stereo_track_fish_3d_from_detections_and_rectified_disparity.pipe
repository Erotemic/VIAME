# track fish 3d from detections and stereo rectified disparity
#
# Compute rectified disparity map from stereo images, detect and track fish
# in each camera, then associate tracks from the 2 cameras to create 3d tracks

# ============================== GLOBAL PROPERTIES =================================
# global pipeline config
#
config _pipeline:_edge
       :capacity                               5

config global
   :input_cameras_directory                    /home/<user>/Desktop/viame_tests/camera_calibrations
   :output_depths_directory                    /home/<user>/Desktop/viame_tests/depthMap

# ================================== VIDEO INPUT ==================================

include measurement_gmm_stereo_track_fish.pipe

# =================================== DEPTH MAP ====================================

process depth_map
  :: compute_stereo_depth_map
  :computer:type                              ocv_rectified_stereo_disparity

block computer:ocv_rectified_stereo_disparity
  :algorithm                                 	SGBM
  :min_disparity                             	0
  :num_disparities                           	240
  :sad_window_size                           	11
  :block_size                                	11
  :speckle_window_size			                0
  :speckle_range				                0
  :cameras_directory                            $CONFIG{global:input_cameras_directory}
  :use_filtered_disparity                       true
endblock

connect from downsampler.output_1
        to   depth_map.left_image
connect from downsampler.output_3
        to   depth_map.right_image

process stereo_pairing
  ::tracks_pairing_from_stereo
  :cameras_directory                      $CONFIG{global:input_cameras_directory}

connect from downsampler.timestamp
        to   stereo_pairing.timestamp
connect from depth_map.depth_map
        to   stereo_pairing.depth_map
connect from tracker1.object_track_set
        to   stereo_pairing.object_track_set1
connect from tracker2.object_track_set
        to   stereo_pairing.object_track_set2

# ==================================== OUTPUT ======================================

process output
  :: image_writer
  :file_name_template                          $CONFIG{global:output_depths_directory}/depth_map%06d.png
  :image_writer:type                           ocv

connect from depth_map.depth_map
        to   output.image

process filtered_track_writer1
  :: write_object_track
  :file_name                                   computed_tracks1.csv
  :writer:type                                 viame_csv
  :writer:viame_csv:stream_identifier          input_list.txt

# Connect inputs to track writer
connect from stereo_pairing.filtered_object_track_set1
        to   filtered_track_writer1.object_track_set
connect from stereo_pairing.timestamp
        to   filtered_track_writer1.timestamp

process filtered_track_writer2
  :: write_object_track
  :file_name                                   computed_tracks2.csv
  :writer:type                                 viame_csv
  :writer:viame_csv:stream_identifier          input_list.txt

# Connect inputs to track writer
connect from stereo_pairing.filtered_object_track_set2
        to   filtered_track_writer2.object_track_set
connect from stereo_pairing.timestamp
        to   filtered_track_writer2.timestamp

# -- end of file --
