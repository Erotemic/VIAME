# ==================================================================================
#
# Register co-collected optical and thermal imagery
#

# ============================== GLOBAL PROPERTIES =================================
# global pipeline config
#
config _pipeline:_edge
  :capacity                                             5

# ================================= INPUT VIDEO ====================================

process optical_input
  :: video_input
  :video_filename                                       input_optical_images.txt
  :video_reader:type                                    image_list
  :video_reader:image_list:sort_by_time                 true
  block video_reader:image_list:image_reader
    :type                                               add_timestamp_from_filename
    block add_timestamp_from_filename
      :image_reader:type                                ocv
    endblock
  endblock

process thermal_input
  :: video_input
  :video_filename                                       input_thermal_images.txt
  :video_reader:type                                    image_list
  :video_reader:image_list:sort_by_time                 true
  block video_reader:image_list:image_reader
    :type                                               add_timestamp_from_filename
    block add_timestamp_from_filename
      :image_reader:type                                ocv
    endblock
  endblock

# ================================ REGISTRATION ===================================

process register_images
  :: itk_eo_ir_registration
  :output_frames_without_match                          true
  :max_time_offset                                      1.0

connect from optical_input.image
        to   register_images.optical_image
connect from optical_input.timestamp
        to   register_images.optical_timestamp
connect from optical_input.file_name
        to   register_images.optical_file_name

connect from thermal_input.image
        to   register_images.thermal_image
connect from thermal_input.timestamp
        to   register_images.thermal_timestamp
connect from thermal_input.file_name
        to   register_images.thermal_file_name

# ==================================== OUTPUT ======================================

process scale_warped
  :: image_filter
  :filter:type                                          vxl_convert_image

  block filter:vxl_convert_image
    :format                                             byte
    :single_channel                                     false
    :percentile_norm                                    0.001
  endblock

connect from register_images.warped_thermal_image
        to   scale_warped.image

process fused_merger
  :: merge_images
  :merge_images:type                                    ocv
  :merge_images:ocv:error_on_invalid                    false

connect from register_images.optical_image
        to   fused_merger.image1
connect from scale_warped.image
        to   fused_merger.image2

process fused_writer
  :: image_writer
  :image_writer:type                                    vxl
  :replace_filename_strings                             COLOR,FUSED,JPG,PNG

connect from register_images.optical_file_name
        to   fused_writer.image_file_name
connect from fused_merger.image
        to   fused_writer.image

process homography_writer
  :: write_homography_list
  :file_name                                            homographies.txt

connect from register_images.thermal_file_name
        to   homography_writer.source_file_name
connect from register_images.optical_file_name
        to   homography_writer.dest_file_name
connect from register_images.thermal_to_optical_homog
        to   homography_writer.homography

# -- end of file --
