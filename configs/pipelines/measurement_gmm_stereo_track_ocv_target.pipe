# Stereo track OCV targets
# Runs automated ocv target detection on each of the images of a stereo camera

# ============================== GLOBAL PROPERTIES =================================
# global pipeline config
#
config _pipeline:_edge
  :capacity                                    5

config global
   :output_directory                           ./
   :target_width_value                         9
   :target_height_value                        6
   :square_size_value                          1.

# =============================== INPUT FRAME LIST =================================

include common_stereo_input_with_downsampler.pipe

# =================================== DETECTOR =====================================

process detector1
  :: image_object_detector
  :detector:type                               ocv_target_detector

  block detector:ocv_target_detector
    :target_width                              $CONFIG{global:target_width_value}
    :target_height                             $CONFIG{global:target_height_value}
    :square_size                               $CONFIG{global:square_size_value}
    :object_type                               "corner"
  endblock

process detector2
  :: image_object_detector
  :detector:type                               ocv_target_detector

  block detector:ocv_target_detector
  :target_width                                $CONFIG{global:target_width_value}
  :target_height                               $CONFIG{global:target_height_value}
  :square_size                                 $CONFIG{global:square_size_value}
  :object_type                                 "corner"
  endblock

process detector_writer1
  :: detected_object_output

  # Type of file to output
  :file_name                                   $CONFIG{global:output_directory}computed_detections1.csv
  :writer:type                                 viame_csv

connect from downsampler.output_1
        to   detector1.image
connect from downsampler.output_2
        to   detector_writer1.image_file_name
connect from detector1.detected_object_set
        to   detector_writer1.detected_object_set

process detector_writer2
  :: detected_object_output

  # Type of file to output
  :file_name                                   $CONFIG{global:output_directory}computed_detections2.csv
  :writer:type                                 viame_csv

connect from downsampler.output_3
        to   detector2.image
connect from downsampler.output_4
        to   detector_writer2.image_file_name
connect from detector2.detected_object_set
        to   detector_writer2.detected_object_set

# ================================= CORE TRACKER ===================================

process append_detections1
  ::append_detections_to_tracks
  :min_frame_count                           0
  :max_frame_count                           0

connect from downsampler.timestamp
        to   append_detections1.timestamp
connect from detector1.detected_object_set
        to   append_detections1.detected_object_set

process append_detections2
  ::append_detections_to_tracks
  :min_frame_count                           0
  :max_frame_count                           0

connect from downsampler.timestamp
        to   append_detections2.timestamp
connect from detector2.detected_object_set
        to   append_detections2.detected_object_set

# ================================= OUTPUT DATA ====================================

process track_writer1
  :: write_object_track
  :file_name                                   $CONFIG{global:output_directory}computed_tracks1.csv
  :writer:type                                 viame_csv
  :writer:viame_csv:stream_identifier          input_list.txt

# Connect inputs to track writer
connect from append_detections1.object_track_set
        to   track_writer1.object_track_set
connect from append_detections1.timestamp
        to   track_writer1.timestamp
connect from downsampler.output_2
        to   track_writer1.image_file_name

process track_writer2
  :: write_object_track
  :file_name                                   $CONFIG{global:output_directory}computed_tracks2.csv
  :writer:type                                 viame_csv
  :writer:viame_csv:stream_identifier          input_list.txt

# Connect inputs to track writer
connect from append_detections2.object_track_set
        to   track_writer2.object_track_set
connect from append_detections2.timestamp
        to   track_writer2.timestamp
connect from downsampler.output_4
        to   track_writer2.image_file_name

# -- end of file --
